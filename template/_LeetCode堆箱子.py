from typing import List


class Solution:
    def pileBox(self, box: List[List[int]]) -> int:
        NUM = len(box)
        box.sort(key=lambda x: (x[0], -x[1], -x[2]))
        dp = [0] * NUM
        for i in range(0, NUM):
            dp[i] = box[i][2]
            for j in range(0, i):
                if box[j][1] < box[i][1] and box[j][2] < box[i][2]:
                    dp[i] = max(dp[i], dp[j] + box[i][2])

        return max(dp)

if __name__ == "__main__":
    obj = Solution()
    mybox = [[9, 9, 10], [8, 10, 9], [9, 8, 10], [9, 8, 10], [10, 8, 8], [9, 8, 9],
             [9, 8, 8], [8, 9, 10], [10, 9, 10], [8, 8, 10], [10, 9, 10], [10, 9, 8],
             [8, 9, 9], [9, 10, 8], [8, 9, 9], [10, 10, 9], [8, 9, 10], [8, 10, 10],
             [8, 9, 10], [10, 10, 8], [10, 10, 9], [9, 10, 10], [10, 8, 9], [10, 10, 9],
             [8, 9, 10], [8, 8, 9], [8, 10, 10], [9, 9, 10], [10, 8, 8], [10, 10, 8],
             [8, 9, 9], [8, 9, 8], [10, 10, 8], [8, 10, 8], [10, 9, 10], [9, 9, 10],
             [9, 9, 9], [8, 9, 8], [9, 8, 8], [8, 9, 10], [10, 10, 8], [9, 9, 9],
             [10, 10, 10], [10, 9, 8], [9, 8, 9], [8, 8, 10], [8, 8, 8], [8, 8, 8],
             [8, 9, 10], [10, 9, 8], [8, 10, 8], [8, 10, 10], [9, 10, 10], [8, 8, 9],
             [9, 9, 9], [10, 8, 8], [8, 10, 10], [9, 10, 9], [9, 9, 8], [8, 10, 9],
             [9, 8, 8], [9, 9, 10], [9, 10, 10], [8, 8, 10]]
    mybox = [[1, 1, 1], [2, 2, 2], [3, 3, 3]]
    print(obj.pileBox(mybox))